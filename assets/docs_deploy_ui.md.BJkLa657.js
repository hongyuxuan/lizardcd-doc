import{_ as s,c as i,o as a,a3 as e,a5 as l,a6 as t}from"./chunks/framework.CVQlUOPj.js";const y=JSON.parse('{"title":"ui 部署","description":"","frontmatter":{},"headers":[],"relativePath":"docs/deploy/ui.md","filePath":"docs/deploy/ui.md","lastUpdated":1721099276000}'),n={name:"docs/deploy/ui.md"},h=e(`<h1 id="ui-部署" tabindex="-1">ui 部署 <a class="header-anchor" href="#ui-部署" aria-label="Permalink to &quot;ui 部署&quot;">​</a></h1><p>本文档将向您展示如何独立安装 lizardcd-ui 组件。</p><h2 id="在-k8s-集群上使用-helm-安装" tabindex="-1">在 k8s 集群上使用 helm 安装 <a class="header-anchor" href="#在-k8s-集群上使用-helm-安装" aria-label="Permalink to &quot;在 k8s 集群上使用 helm 安装&quot;">​</a></h2><p>可 <a href="https://artifacthub.io/packages/helm/lizardcd/lizardcd" target="_blank" rel="noreferrer">在此</a> 查看最新的 Helm Charts 安装包。</p><p>添加仓库：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lizardcd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://funnyfpf.github.io/lizardcd/</span></span></code></pre></div><p>安装chart：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lizardcd-ui</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lizardcd-lizardcd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--set </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">server.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--set </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">agent.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--set </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">etcd.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--set </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ui.externalServer.server=&quot;192.168.200.168&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--set </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ui.externalServer.port=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5117</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>请将上述<code>192.168.200.168</code>及<code>5117</code>换成实际server ip地址和端口</p></div><p>以上操作将在您的 Kubernetes 集群的 default 命名空间下安装 <code>lizardcd-ui</code> 工作负载，以及相应的<code>service</code>、<code>configmap</code>。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>默认 charts 并不会创建 <code>Ingress</code>，您可以编辑 <code>values.yaml</code> ，将 <code>Ingress</code> 打开，并填入您的域名：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lizardcd-ui.local</span></span></code></pre></div></div><h2 id="访问-lizardcd" tabindex="-1">访问 Lizardcd <a class="header-anchor" href="#访问-lizardcd" aria-label="Permalink to &quot;访问 Lizardcd&quot;">​</a></h2><p>打开浏览器，输入您配置的 Ingress 域名或通过 nodePort 的方式访问 lizardcd-ui。</p><p>如果能看到如下页面，则说明安装成功。否则，请检查您的工作负载 <code>lizardcd-ui</code> 的日志是否有报错。</p><p><img src="`+l+'" alt="" data-fancybox="gallery"></p><p>若您的 lizardcd-ui 连接的是 Kubernetes 上部署的 lizardcd-server，则在您的 Kubernetes 任务页面找到 <code>lizardcd-lizardcd-initjob</code>，查看该任务的日志输出，找到初始化的 <code>admin</code> 用户密码并记住此密码。</p><p>若连接的是虚机部署的 lizardcd-server，则在初始化数据库的时候查看任务日志输出，详见 <a href="/lizardcd-doc/docs/deploy/server.html#linux">server 部署 linux 部分</a></p><p>回到 Lizardcd 页面，用 <code>admin</code> 用户密码登录，您应该能看到如下页面：</p><p><img src="'+t+'" alt="" data-fancybox="gallery"></p><h2 id="卸载" tabindex="-1">卸载 <a class="header-anchor" href="#卸载" aria-label="Permalink to &quot;卸载&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lizardcd-ui</span></span></code></pre></div>',21),p=[h];function d(k,r,c,o,g,F){return a(),i("div",null,p)}const E=s(n,[["render",d]]);export{y as __pageData,E as default};
